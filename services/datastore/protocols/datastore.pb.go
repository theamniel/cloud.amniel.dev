// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v5.28.3
// source: services/datastore/protocols/datastore.proto

package protocols

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmptyQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyQuery) Reset() {
	*x = EmptyQuery{}
	mi := &file_services_datastore_protocols_datastore_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyQuery) ProtoMessage() {}

func (x *EmptyQuery) ProtoReflect() protoreflect.Message {
	mi := &file_services_datastore_protocols_datastore_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyQuery.ProtoReflect.Descriptor instead.
func (*EmptyQuery) Descriptor() ([]byte, []int) {
	return file_services_datastore_protocols_datastore_proto_rawDescGZIP(), []int{0}
}

type Query struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Query) Reset() {
	*x = Query{}
	mi := &file_services_datastore_protocols_datastore_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_services_datastore_protocols_datastore_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_services_datastore_protocols_datastore_proto_rawDescGZIP(), []int{1}
}

func (x *Query) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type InsertedResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Result:
	//
	//	*InsertedResult_ID
	//	*InsertedResult_Error
	Result        isInsertedResult_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertedResult) Reset() {
	*x = InsertedResult{}
	mi := &file_services_datastore_protocols_datastore_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertedResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertedResult) ProtoMessage() {}

func (x *InsertedResult) ProtoReflect() protoreflect.Message {
	mi := &file_services_datastore_protocols_datastore_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertedResult.ProtoReflect.Descriptor instead.
func (*InsertedResult) Descriptor() ([]byte, []int) {
	return file_services_datastore_protocols_datastore_proto_rawDescGZIP(), []int{2}
}

func (x *InsertedResult) GetResult() isInsertedResult_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *InsertedResult) GetID() string {
	if x != nil {
		if x, ok := x.Result.(*InsertedResult_ID); ok {
			return x.ID
		}
	}
	return ""
}

func (x *InsertedResult) GetError() string {
	if x != nil {
		if x, ok := x.Result.(*InsertedResult_Error); ok {
			return x.Error
		}
	}
	return ""
}

type isInsertedResult_Result interface {
	isInsertedResult_Result()
}

type InsertedResult_ID struct {
	ID string `protobuf:"bytes,1,opt,name=ID,proto3,oneof"`
}

type InsertedResult_Error struct {
	Error string `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*InsertedResult_ID) isInsertedResult_Result() {}

func (*InsertedResult_Error) isInsertedResult_Result() {}

type UpdateResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MatchedCount  int64                  `protobuf:"varint,1,opt,name=matched_count,json=matchedCount,proto3" json:"matched_count,omitempty"`
	ModifiedCount int64                  `protobuf:"varint,2,opt,name=modified_count,json=modifiedCount,proto3" json:"modified_count,omitempty"`
	UpsertedCount int64                  `protobuf:"varint,3,opt,name=upserted_count,json=upsertedCount,proto3" json:"upserted_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateResult) Reset() {
	*x = UpdateResult{}
	mi := &file_services_datastore_protocols_datastore_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResult) ProtoMessage() {}

func (x *UpdateResult) ProtoReflect() protoreflect.Message {
	mi := &file_services_datastore_protocols_datastore_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResult.ProtoReflect.Descriptor instead.
func (*UpdateResult) Descriptor() ([]byte, []int) {
	return file_services_datastore_protocols_datastore_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateResult) GetMatchedCount() int64 {
	if x != nil {
		return x.MatchedCount
	}
	return 0
}

func (x *UpdateResult) GetModifiedCount() int64 {
	if x != nil {
		return x.ModifiedCount
	}
	return 0
}

func (x *UpdateResult) GetUpsertedCount() int64 {
	if x != nil {
		return x.UpsertedCount
	}
	return 0
}

type DeleteResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeletedCount  int32                  `protobuf:"varint,1,opt,name=deleted_count,json=deletedCount,proto3" json:"deleted_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResult) Reset() {
	*x = DeleteResult{}
	mi := &file_services_datastore_protocols_datastore_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResult) ProtoMessage() {}

func (x *DeleteResult) ProtoReflect() protoreflect.Message {
	mi := &file_services_datastore_protocols_datastore_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResult.ProtoReflect.Descriptor instead.
func (*DeleteResult) Descriptor() ([]byte, []int) {
	return file_services_datastore_protocols_datastore_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteResult) GetDeletedCount() int32 {
	if x != nil {
		return x.DeletedCount
	}
	return 0
}

var File_services_datastore_protocols_datastore_proto protoreflect.FileDescriptor

var file_services_datastore_protocols_datastore_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x1a, 0x29, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x73, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2f, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0c, 0x0a, 0x0a, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0x1d, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x22, 0x44, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x0c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x33,
	0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x32, 0xc8, 0x07, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0a,
	0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x0e, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x10, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x46, 0x69, 0x6c, 0x65, 0x1a, 0x12, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x65, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x41, 0x64, 0x64, 0x42, 0x61, 0x6e, 0x12, 0x0b, 0x2e, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x2e, 0x42, 0x61, 0x6e, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x73, 0x12,
	0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x0f, 0x2e, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x6e, 0x12, 0x30, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x42, 0x61,
	0x6e, 0x12, 0x11, 0x2e, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x42, 0x61, 0x6e, 0x1a, 0x13, 0x2e, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x2e, 0x42, 0x61,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x12, 0x11, 0x2e, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x61, 0x6e, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x10,
	0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x1a,
	0x18, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x14, 0x2e,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x12, 0x3e, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x12, 0x16, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x12, 0x10, 0x2e, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3a,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x73, 0x12, 0x15, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x1a, 0x14, 0x2e, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x12, 0x34, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x14, 0x2e, 0x74, 0x72, 0x61,
	0x66, 0x66, 0x69, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x12, 0x3a, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x40, 0x0a, 0x0d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x12, 0x16, 0x2e,
	0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x26,
	0x5a, 0x24, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x6d, 0x6e, 0x69, 0x65, 0x6c, 0x2e, 0x64,
	0x65, 0x76, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x3b, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_datastore_protocols_datastore_proto_rawDescOnce sync.Once
	file_services_datastore_protocols_datastore_proto_rawDescData = file_services_datastore_protocols_datastore_proto_rawDesc
)

func file_services_datastore_protocols_datastore_proto_rawDescGZIP() []byte {
	file_services_datastore_protocols_datastore_proto_rawDescOnce.Do(func() {
		file_services_datastore_protocols_datastore_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_datastore_protocols_datastore_proto_rawDescData)
	})
	return file_services_datastore_protocols_datastore_proto_rawDescData
}

var file_services_datastore_protocols_datastore_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_services_datastore_protocols_datastore_proto_goTypes = []any{
	(*EmptyQuery)(nil),     // 0: protocols.EmptyQuery
	(*Query)(nil),          // 1: protocols.Query
	(*InsertedResult)(nil), // 2: protocols.InsertedResult
	(*UpdateResult)(nil),   // 3: protocols.UpdateResult
	(*DeleteResult)(nil),   // 4: protocols.DeleteResult
	(*File)(nil),           // 5: file.File
	(*SearchFile)(nil),     // 6: file.SearchFile
	(*Ban)(nil),            // 7: banned.Ban
	(*SearchBan)(nil),      // 8: banned.SearchBan
	(*Short)(nil),          // 9: shortener.Short
	(*SearchShort)(nil),    // 10: shortener.SearchShort
	(*Traffic)(nil),        // 11: traffic.Traffic
	(*UpdateTraffic)(nil),  // 12: traffic.UpdateTraffic
	(*ListFile)(nil),       // 13: file.ListFile
	(*FileResponse)(nil),   // 14: file.FileResponse
	(*ListBan)(nil),        // 15: banned.ListBan
	(*BanResponse)(nil),    // 16: banned.BanResponse
	(*ShortResponse)(nil),  // 17: shortener.ShortResponse
	(*ListShort)(nil),      // 18: shortener.ListShort
	(*ListTraffic)(nil),    // 19: traffic.ListTraffic
}
var file_services_datastore_protocols_datastore_proto_depIdxs = []int32{
	5,  // 0: protocols.DataService.AddFile:input_type -> file.File
	0,  // 1: protocols.DataService.GetFiles:input_type -> protocols.EmptyQuery
	6,  // 2: protocols.DataService.GetFile:input_type -> file.SearchFile
	6,  // 3: protocols.DataService.DeleteFile:input_type -> file.SearchFile
	7,  // 4: protocols.DataService.AddBan:input_type -> banned.Ban
	0,  // 5: protocols.DataService.GetBans:input_type -> protocols.EmptyQuery
	8,  // 6: protocols.DataService.GetBan:input_type -> banned.SearchBan
	8,  // 7: protocols.DataService.DeleteBan:input_type -> banned.SearchBan
	9,  // 8: protocols.DataService.AddShort:input_type -> shortener.Short
	10, // 9: protocols.DataService.GetShort:input_type -> shortener.SearchShort
	0,  // 10: protocols.DataService.GetShorts:input_type -> protocols.EmptyQuery
	10, // 11: protocols.DataService.DeleteShort:input_type -> shortener.SearchShort
	11, // 12: protocols.DataService.AddTraffic:input_type -> traffic.Traffic
	0,  // 13: protocols.DataService.GetTraffics:input_type -> protocols.EmptyQuery
	1,  // 14: protocols.DataService.GetTraffic:input_type -> protocols.Query
	1,  // 15: protocols.DataService.DeleteTraffic:input_type -> protocols.Query
	12, // 16: protocols.DataService.UpdateTraffic:input_type -> traffic.UpdateTraffic
	2,  // 17: protocols.DataService.AddFile:output_type -> protocols.InsertedResult
	13, // 18: protocols.DataService.GetFiles:output_type -> file.ListFile
	14, // 19: protocols.DataService.GetFile:output_type -> file.FileResponse
	4,  // 20: protocols.DataService.DeleteFile:output_type -> protocols.DeleteResult
	2,  // 21: protocols.DataService.AddBan:output_type -> protocols.InsertedResult
	15, // 22: protocols.DataService.GetBans:output_type -> banned.ListBan
	16, // 23: protocols.DataService.GetBan:output_type -> banned.BanResponse
	4,  // 24: protocols.DataService.DeleteBan:output_type -> protocols.DeleteResult
	2,  // 25: protocols.DataService.AddShort:output_type -> protocols.InsertedResult
	17, // 26: protocols.DataService.GetShort:output_type -> shortener.ShortResponse
	18, // 27: protocols.DataService.GetShorts:output_type -> shortener.ListShort
	4,  // 28: protocols.DataService.DeleteShort:output_type -> protocols.DeleteResult
	2,  // 29: protocols.DataService.AddTraffic:output_type -> protocols.InsertedResult
	19, // 30: protocols.DataService.GetTraffics:output_type -> traffic.ListTraffic
	19, // 31: protocols.DataService.GetTraffic:output_type -> traffic.ListTraffic
	4,  // 32: protocols.DataService.DeleteTraffic:output_type -> protocols.DeleteResult
	3,  // 33: protocols.DataService.UpdateTraffic:output_type -> protocols.UpdateResult
	17, // [17:34] is the sub-list for method output_type
	0,  // [0:17] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_services_datastore_protocols_datastore_proto_init() }
func file_services_datastore_protocols_datastore_proto_init() {
	if File_services_datastore_protocols_datastore_proto != nil {
		return
	}
	file_services_datastore_protocols_banned_proto_init()
	file_services_datastore_protocols_file_proto_init()
	file_services_datastore_protocols_shortener_proto_init()
	file_services_datastore_protocols_traffic_proto_init()
	file_services_datastore_protocols_datastore_proto_msgTypes[2].OneofWrappers = []any{
		(*InsertedResult_ID)(nil),
		(*InsertedResult_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_datastore_protocols_datastore_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_datastore_protocols_datastore_proto_goTypes,
		DependencyIndexes: file_services_datastore_protocols_datastore_proto_depIdxs,
		MessageInfos:      file_services_datastore_protocols_datastore_proto_msgTypes,
	}.Build()
	File_services_datastore_protocols_datastore_proto = out.File
	file_services_datastore_protocols_datastore_proto_rawDesc = nil
	file_services_datastore_protocols_datastore_proto_goTypes = nil
	file_services_datastore_protocols_datastore_proto_depIdxs = nil
}
